.Container {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;

  .GroupLabel + .InnerContainer {
    padding: 1.2rem;
  }
}

.InnerContainer {
  display: flex;
  gap: 1.6rem;
  padding: 0;

  &.Row {
    flex-direction: row;
    flex-wrap: wrap;
  }

  &.Column {
    flex-direction: column;
  }
}

.RadioContainer {
  position: relative;
  transition: all 300ms ease-in-out;

  &:hover > .Input:not(.Disabled) + .Label:not(.Error) {
    color: blue;
    text-decoration: underline;
  }

  .Input {
    position: absolute;
    z-index: 1;
    opacity: 0;
    user-select: none;
    transition: all 300ms ease-in-out;

    + .Label {
      display: flex;
      gap: 1.2rem;
      align-items: center;
      cursor: pointer;

      .LabelText {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      &::before {
        content: "";
        display: inline-block;
        width: 2rem;
        height: 2rem;
        vertical-align: bottom;
        background-color: white;
        border: 0.1rem solid black;
        border-radius: 50%;
        transition: all 300ms ease-in-out;
      }

      &:hover:not(.Disabled):not(.Error) {
        .LabelText {
          color: blue !important;
        }

        &::before {
          padding: 0;
          border-color: blue;
        }
      }

      &.Disabled {
        cursor: not-allowed;

        &::before {
          border: 0.1rem dashed grey;
        }
      }

      &.Error {
        &::before {
          border-color: red;
        }
      }
    }

    &:checked:not(.Disabled):not(.Error) + .Label .LabelText {
      font-weight: 600 !important;
    }

    &:checked:not(.Disabled) + .Label::before {
      background: radial-gradient(black 0%, black 30%, white 35%, white 100%);
    }

    &:focus:not(.Disabled) + .Label {
      &::before {
        padding: 0;
        border-color: blue;
      }
    }
  }
}
