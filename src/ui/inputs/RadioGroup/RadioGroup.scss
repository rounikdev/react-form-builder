.Container {
  display: flex;
  flex-direction: column;
  gap: var(--offset-medium);
}

.InnerContainer {
  display: flex;

  &.Row {
    flex-flow: row wrap;
    gap: var(--offset-large);
  }

  &.Column {
    flex-direction: column;
    gap: var(--offset-medium);
  }

  .RadioContainer {
    position: relative;

    .Input {
      position: absolute;
      z-index: 1;

      opacity: 0;

      transition: all var(--transition) ease-in-out;

      user-select: none;

      &:checked + .Label .LabelCircle::after {
        opacity: 1;
      }

      &:focus + .Label .LabelCircle {
        background-color: var(--color-input-background-focus);
        box-shadow: var(--box-shadow-inset);
      }

      &:disabled + .Label {
        /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
        cursor: not-allowed;

        .LabelCircle {
          background-color: var(--color-input-background-disabled);
          border: var(--border-width) dashed var(--color-border-disabled);
        }
      }
    }

    .Label {
      display: flex;
      gap: var(--offset-small);
      overflow: hidden;

      color: var(--color-label);
      font-size: var(--font-small);
      text-overflow: ellipsis;

      cursor: pointer;

      transition: all var(--transition) ease-in-out;

      .LabelText {
        flex: 1;
        margin-top: calc(var(--offset-small) / 2);
      }

      .LabelCircle {
        display: flex;
        align-items: center;
        justify-content: center;
        width: var(--offset-large);
        height: var(--offset-large);

        background-color: var(--color-background);
        border: var(--border-width) solid var(--color-border);
        border-radius: 50%;

        transition: all var(--transition) ease-in-out;

        &::after {
          width: 65%;
          height: 65%;

          background-color: var(--color-font);
          border-radius: 50%;
          opacity: 0;

          transition: all var(--transition) ease-in-out;

          content: "";
        }

        &.Error {
          background-color: var(--color-input-background-error);
          border-color: var(--color-border-error);
        }
      }
    }
  }
}
